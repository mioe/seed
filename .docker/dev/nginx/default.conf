# front
server {
	listen 0.0.0.0:80;
	server_name app.localhost;

	add_header X-Frame-Options "SAMEORIGIN";
	add_header X-XSS-Protection "1; mode=block";
	add_header X-Content-Type-Options "nosniff";

	charset utf-8;

	location / {
		proxy_redirect                      off;
		proxy_set_header X-Real-IP          $remote_addr;
		proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto  $scheme;
		proxy_read_timeout                  1m;
		proxy_connect_timeout               1m;

		# Websocket support
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;

		# Proxy to the Node.JS instance of the client app
		proxy_pass http://host.docker.internal:3000;
	}

	# Proxy all API requests
	location ~ ^/(api|storage)/ {
		proxy_pass http://host.docker.internal:3001;
	}
}

# adm
server {
	listen 0.0.0.0:80;
	server_name adm.localhost;

	add_header X-Frame-Options "SAMEORIGIN";
	add_header X-XSS-Protection "1; mode=block";
	add_header X-Content-Type-Options "nosniff";

	charset utf-8;

	location / {
		proxy_redirect                      off;
		proxy_set_header X-Real-IP          $remote_addr;
		proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto  $scheme;
		proxy_read_timeout                  1m;
		proxy_connect_timeout               1m;

		# Websocket support
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;

		# Proxy to the Node.JS instance of the client app
		proxy_pass http://host.docker.internal:3002;
	}

	# Proxy all API requests
	location ~ ^/(api|storage)/ {
		proxy_pass http://host.docker.internal:3001;
	}
}

